// SplitForm.jsx
import React, { useState } from "react";
import {
  CardNumberElement,
  CardExpiryElement,
  CardCvcElement,
  useStripe,
  useElements,
} from "@stripe/react-stripe-js";

const SplitForm = () => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [postalCode, setPostalCode] = useState("");
  const [nameError, setNameError] = useState("");
  const [emailError, setEmailError] = useState("");

  const stripe = useStripe();
  const elements = useElements();

  const handleSubmit = async (event) => {
    event.preventDefault();

    // Validation
    if (!name.trim()) {
      setNameError("Name is required");
      return;
    }
    if (!email.trim()) {
      setEmailError("Email is required");
      return;
    }

    setNameError("");
    setEmailError("");

    if (!stripe || !elements) {
      return;
    }

    const cardElement = elements.getElement(CardNumberElement);

    const { token, error } = await stripe.createToken(cardElement);

    if (error) {
      console.error(error);
    } else {
      const response = await fetch("/your-server-endpoint", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          token: token.id,
          name,
          email,
          postalCode,
        }),
      });

      const result = await response.json();

      console.log(result);
    }
  };

  const inputStyle = {
    width: "100%",
    padding: "10px",
    fontSize: "16px",
    marginBottom: "8px",
  };

  const cardElementStyle = {
    border: "1px solid #ced4da",
    borderRadius: "4px",
    padding: "10px",
    marginBottom: "20px",
  };

  const cardContainerStyle = {
    border: "1px solid #ced4da",
    borderRadius: "4px",
    padding: "20px",
    marginBottom: "20px",
  };

  return (
    <form onSubmit={handleSubmit} style={{ maxWidth: "400px", margin: "auto" }}>
      <div style={cardContainerStyle}>
        <div style={{ marginBottom: "20px" }}>
          <label>
            Name
            <input
              type="text"
              value={name}
              onChange={(e) => setName(e.target.value)}
              required
              style={inputStyle}
            />
            <span style={{ color: "red" }}>{nameError}</span>
          </label>
        </div>
        <div style={{ marginBottom: "20px" }}>
          <label>
            Email
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
              style={inputStyle}
            />
            <span style={{ color: "red" }}>{emailError}</span>
          </label>
        </div>
      </div>
      <div style={cardElementStyle}>
        <label>
          Card Number
          <CardNumberElement options={cardElementOptions} />
        </label>
      </div>
      <div style={cardElementStyle}>
        <label>
          Expiry Date
          <CardExpiryElement options={cardElementOptions} />
        </label>
      </div>
      <div style={cardElementStyle}>
        <label>
          CVC
          <CardCvcElement options={cardElementOptions} />
        </label>
      </div>
      <div style={{ marginBottom: "20px" }}>
        <label>
          Postal Code
          <input
            type="text"
            value={postalCode}
            onChange={(e) => setPostalCode(e.target.value)}
            required
            style={inputStyle}
          />
        </label>
      </div>
      <button type="submit" disabled={!stripe} style={payButtonStyle}>
        Pay
      </button>
    </form>
  );
};

const cardElementOptions = {
  style: {
    base: {
      fontSize: "16px",
      color: "#495057",
      "::placeholder": {
        color: "#6c757d",
      },
    },
    invalid: {
      color: "#dc3545",
    },
  },
};

const payButtonStyle = {
  backgroundColor: "#000",
  color: "#fff",
  padding: "10px",
  fontSize: "16px",
  borderRadius: "4px",
  cursor: "pointer",
};

export default SplitForm;
